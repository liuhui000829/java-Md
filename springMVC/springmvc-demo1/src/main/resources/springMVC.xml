<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--注解扫描-->
    <context:component-scan base-package="com.liuhui"/>


    <!--    配置thymeleaf试图解析器-->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!--                        试图前缀-->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!--                        试图后缀-->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
    <!--  配置视图控制器  -->
    <!--    在当前的控制器请求中 没有其他的逻辑 只展示一个视图名称的时候 使用这种方式-->
    <mvc:view-controller path="/" view-name="HTTPMessageConverter"/>
    <mvc:view-controller path="/test_rest" view-name="test_rest"/>

    <!--    开放静态资源的访问  默认的servlet-->
    <mvc:default-servlet-handler/>
    <!--    开启mvc的注解驱动-->
    <!--    <mvc:annotation-driven/>-->


    <!-- 解决了中文乱码-->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <!--            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>-->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=utf-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 配置文件上传解析器,将上传的文件封装为 MultipartFile-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <!-- 配置拦截器-->
    <mvc:interceptors>
        <!-- <bean  class="com.liuhui.interceptors.FirstInterceptor"/>-->
        <!-- <ref bean="firstInterceptor"/>-->
        <!-- 以上两种方式都是对DispatcherServlet所有处理的请求进行拦截-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/testInterceptor"/>
            <ref bean="firstInterceptor"/>
<!--       以上配置方式可以通过ref或者bean标签设置拦截器 通过mvc:mapping设置需要拦截的请求,
           通过mvc:exclude-mapping设置需要排除的请求,即不需要拦截请求    -->
        </mvc:interceptor>
    </mvc:interceptors>


</beans>